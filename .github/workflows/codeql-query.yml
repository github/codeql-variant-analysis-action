name: CodeQL query

on:
  workflow_call:
    secrets:
      TEST_PAT:
        description: insert a pat, to be used for testing in lieu of other tokens

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      repoNwoChunks: ${{ steps.split.outputs.repoNwoChunks }}
    permissions: {}

    steps:
      - name: Mask download URL
        run: |
          echo "::add-mask::$(jq .inputs.instructions_url "$GITHUB_EVENT_PATH")"

      - name: Output matrix elements
        id: split
        run: |
          curl --fail --show-error --location --retry 10 "$(jq --raw-output .inputs.instructions_url "$GITHUB_EVENT_PATH")" | \
            jq --raw-output '"::set-output name=repoNwoChunks::\(.repoNwoChunks)"'

  run:
    runs-on: ubuntu-latest
    needs:
      - setup
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        repoNwos: ${{ fromJSON(needs.setup.outputs.repoNwoChunks) }}
    permissions: {}

    steps:
      - name: Mask download URL
        run: |
          echo "::add-mask::$(jq --raw-output .inputs.instructions_url "$GITHUB_EVENT_PATH")"

      # Download and use ::add::mask for all tokens.
      # Theoretically we'll only output a subset of the tokens. Unless it causes a
      # performance issue, we may as well mask all tokens to be extra safe.
      # Note that masking does not persist to other/future jobs in the same workflow.
      - name: Download and mask tokens
        run: |
          curl --fail --show-error --location --retry 10 --output instructions.json "$(jq --raw-output .inputs.instructions_url "$GITHUB_EVENT_PATH")"
          jq '.repositories | [.[].token , .[].pat] | map( select( . != null ) ) | .[]' --raw-output instructions.json | \
            xargs -I {} echo "::add-mask::{}"

      # Extract the subset of the repositories input that we'll be analysing for this
      # job, using the repoNwos matrix input.
      - name: Compute subset of repos
        id: repos
        shell: node {0}
        run: |
          const fs = require('fs');
          const allRepos = JSON.parse(fs.readFileSync("instructions.json")).repositories;
          const repoNwos = new Set(${{ toJSON(matrix.repoNwos) }});
          const repositories = allRepos.filter(r => repoNwos.has(r.nwo));
          if ("${{ secrets.TEST_PAT }}") {
            allRepos.forEach(r => r.pat = "${{ secrets.TEST_PAT }}")
          }
          console.log(`::set-output name=repositories::${JSON.stringify(repositories)}`);

      # NOTE: this is only expected to work on github.com hosted runnners.
      # It will not work on any self-hosted runners.
      - name: Initialize CodeQL
        id: init
        run: |
          # Take the most modern version
          VERSION="$(find "${{ runner.tool_cache }}/CodeQL/" -maxdepth 1 -mindepth 1 -type d -print0 \
                      | sort --zero-terminated \
                      | tail --zero-terminated --lines 1 \
                      | tr -d '\0')"

          CODEQL="$VERSION/x64/codeql/codeql"
          "${CODEQL}" version --format=json
          echo "::set-output name=codeql-path::${CODEQL}"

      - name: Run query
        uses: github/codeql-variant-analysis-action/query@main
        with:
          query_pack_url: ${{ github.event.inputs.query_pack_url }}
          language: ${{ github.event.inputs.language }}
          repositories: ${{ steps.repos.outputs.repositories }}
          codeql: ${{ steps.init.outputs.codeql-path }}

  combine-results:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - run
    permissions: {}

    steps:
      # NOTE: this is only expected to work on github.com hosted runnners.
      # It will not work on any self-hosted runners.
      - name: Initialize CodeQL
        id: init
        run: |
          # Take the most modern version
          VERSION="$(find "${{ runner.tool_cache }}/CodeQL/" -maxdepth 1 -mindepth 1 -type d -print0 \
                      | sort --zero-terminated \
                      | tail --zero-terminated --lines 1 \
                      | tr -d '\0')"

          CODEQL="$VERSION/x64/codeql/codeql"
          "${CODEQL}" version --format=json
          echo "::set-output name=codeql-path::${CODEQL}"

      - name: Combine results
        uses: github/codeql-variant-analysis-action/combine-results@main
